name: Deploy

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3
    
    # JDK 11 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set Gcp Json
      uses: microsoft/variable-substitution@v1
      with:
        files: './src/main/resources/gcpkey.json'
      env:
        type: ${{ secrets.GCP_KEY_TYPE }}
        project_id: ${{ secrets.GCP_KEY_PROJECT_ID }}
        private_key_id: ${{ secrets.GCP_KEY_PRIVATE_KEY_ID }}
        private_key: ${{ secrets.GCP_KEY_PRIVATE_KEY }}
        client_email: ${{ secrets.GCP_KEY_CLIENT_EMAIL }}
        client_id: ${{ secrets.GCP_KEY_CLIENT_ID }}
        auth_uri: ${{ secrets.GCP_KEY_AUTH_URL }}
        token_uri: ${{ secrets.GCP_KEY_TOKEN_URL }}
        auth_provider_x509_cert_url: ${{ secrets.GCP_KEY_AUTH_PROVIDER_X509_CERT_URL }}
        client_x509_cert_url: ${{ secrets.GCP_KEY_CLIENT_X509_CERT_URL }}
      
    - name: Set Yaml
      uses: microsoft/variable-substitution@v1
      with:
        files: './src/main/resources/application-prod.yml'
      env:
        spring.datasource.url: ${{ secrets.DB_URL }} 
        spring.datasource.username: ${{ secrets.DB_USERNAME }}
        spring.datasource.password: ${{ secrets.DB_PASSWORD }}
        spring.gcp.storage.credentials.project-id: ${{ secrets.GCP_PROJECT_ID }}
        eureka.client.service-url.defaultZone: ${{secrets.VM_EUREKA_DEFAULTZONE}}
        
    # Gradlew 실행 허용
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    # Gradle build (Test 제외)
    - name: Build with Gradle
      run: ./gradlew clean build --exclude-task test
    
    # Docker build
    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
        docker build -t member-service .
        docker tag member-service geunskoo/member-service:${GITHUB_SHA::7}
        docker push geunskoo/member-service:${GITHUB_SHA::7}
        
    # Deploy
    - name: Deploy
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.VM_INSTANCE_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: GITHUB_SHA
        script: |
          docker-compose -f docker-compose.member.yml down
          docker pull geunskoo/member-service:${GITHUB_SHA::7}
          docker tag geunskoo/member-service:${GITHUB_SHA::7} member-service
      
          docker-compose -f docker-compose.member.yml up -d
